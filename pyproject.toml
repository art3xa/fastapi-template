[tool.poetry]
name = "fastapi-template"
version = "0.1.0"
description = "FastAPI template"
authors = ["art3xa <artem.romanov.03@bk.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.1"
uvicorn = "^0.30.5"
sqlalchemy = "^2.0.32"
pydantic-settings = "^2.4.0"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.9"
validators = "^0.33.0"
passlib = "^1.7.4"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.6"
mypy = "^1.11.1"
black = "^24.8.0"
pylint = "^3.2.6"
flake8 = "^7.1.1"
flake8-todo = "^0.7"
isort = "^5.13.2"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-randomly = "^3.15.0"
pytest-profiling = "^1.7.0"
pytest-timeout = "^2.3.1"
pytest-freezer = "^0.4.8"
pytest-asyncio = "^0.23.8"
httpx = "^0.27.0"
faker = "^26.3.0"
bandit = "^1.7.9"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.urls]
"Homepage" = "https://github.com/art3xa/fastapi-template"
"Bug Tracker" = "https://github.com/art3xa/fastapi-template/issues"

[tool.black]
line-length = 120
target-version = [ "py311" ]
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.ruff]
line-length = 120
exclude = [
  ".git", "__pycache__", ".mypy_cache", ".pytest_cache",
  "src/db/migrations/*",
]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "B904",
    "B006",
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["alembic", "__pycache__", "^config\\.py$", "^env\\.py$",]

[tool.isort]
py_version = 311
line_length = 120
skip_glob = ["src/db/*"]

[tool.pytest.ini_options]
addopts = "--strict-markers -W error"
junit_family = "xunit2"
testpaths = ["src/tests"]
xfail_strict = true
filterwarnings = [
    "error",
    "error::DeprecationWarning"
]

